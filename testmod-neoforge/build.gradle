plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    mods {
        neoForge {
            sourceSet project(":neoforge").sourceSets.main
        }
    }
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

repositories {
    maven {
        name = "NeoForge"
        url = "https://maven.neoforged.net/releases/"
    }
}

dependencies {
    neoForge libs.neoforge
    forgeRuntimeLibrary libs.jankson

    implementation project(path: ":neoforge", configuration: "namedElements")
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    common(project(path: ":testmod-common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":testmod-common", configuration: "transformProductionNeoForge")) { transitive false }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
